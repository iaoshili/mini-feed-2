version: '3.7'

services:

  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    entrypoint: ['/usr/src/app/entrypoint.sh']
    volumes:
      - './services/users:/usr/src/app'
      - users-extensions:/root/.vscode-server/extensions
      - users-insiders-extensions:/root/.vscode-server-insiders/extensions
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@sql-db:5432/users_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@sql-db:5432/users_test
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    depends_on:
      - sql-db
      - zookeeper
      - kafka
      - redis
      - nosql-db

  sql-db:
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  nosql-db:
    image: mvertes/alpine-mongo:latest
    hostname: nosql_db
    environment:
      - MONGO_INITDB_DATABASE=nosql_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - 27017:27017

# Uncomment this when you are ready to develop front end
  # client:
  #   build:
  #     context: ./services/client
  #     dockerfile: Dockerfile
  #   volumes:
  #     - './services/client:/usr/src/app'
  #     - '/usr/src/app/node_modules'
  #   ports:
  #     - 3007:3000
  #   environment:
  #     - NODE_ENV=development
  #     - REACT_APP_USERS_SERVICE_URL=http://localhost:5001  # Can be an env variable for easy deployment
  #   depends_on:
  #     - users

volumes:
  users-extensions:
  users-insiders-extensions:
